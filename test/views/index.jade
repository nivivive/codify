doctype html
html(lang="en")
  title Codify
  link(href="http://fonts.googleapis.com/css?family=Questrial", rel="stylesheet", type="text/css")
  link(href="/stylesheets/newstyle.css", rel="stylesheet", type="text/css")
  body
    script
      var sample;
      var getViewObject;
      var editor;
      var output;
      var parseCurrent;
      var stopDemHaterz;
      var saveData;
    #header
      | Codify
      span.pink &#160; | &#160;
      a#toggle-output(href="#")
        | Show
        span.yellow(onclick="this.firstChild.data = this.firstChild.data == 'Objective-C' ? 'HTML/CSS' : 'Objective-C'") HTML/CSS
      .docs
        a(href="https://github.com/thedrick/Gilbert/blob/master/README.md", target="_blank") Documentation
    #editor
    #output
    #htmlout
    script(src="http://ace.c9.io/build/src/ace.js", type="text/javascript", charset="utf-8")
    script(src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js")
    script
      editor = new ace.edit("editor");
      editor.setTheme("ace/theme/monokai");
      editor.getSession().setMode("ace/mode/json");
      editor.setShowPrintMargin(false);
      editor.getSession().setUseSoftTabs(true);
      output = new ace.edit("output");
      output.setTheme("ace/theme/monokai");
      output.getSession().setMode("ace/mode/objectivec");
      output.setShowPrintMargin(false);
      output.getSession().setUseSoftTabs(true);
      htmlout = new ace.edit("htmlout");
      htmlout.setTheme("ace/theme/monokai");
      htmlout.getSession().setMode("ace/mode/html");
      htmlout.setShowPrintMargin(false);
      htmlout.getSession().setUseSoftTabs(true);
      saveData = function() {
      var currentcode = editor.getValue();
      console.log(currentcode);
      $.ajax({
      type: "post",
      data: {code: currentcode},
      url: "/savedCode",
      success: true
      });
      }
      function getData() {
      $.ajax({
      type: "get",
      url: "/savedCode",
      success: function(data) {
      console.log(JSON.stringify(data.code));
      editor.setValue(JSON.stringify(data.code, undefined, 4));
      }
      });
      }
      editor.getSession().on('change', function(e){
      parseCurrent();
      parseHTMLCurrent();
      });
      $(document).ready(function(){
      getData();
      stopDemHaterz();
      parseCurrent();
      parseHTMLCurrent();
      });
      $(window).resize(stopDemHaterz);
      editor.addEventListener('keydown', function(e) {
      if (e.keyCode === 13) {
      parseCurrent();
      parseHTMLCurrent();
      }
      }, false);
